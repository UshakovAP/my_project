# Generated by Django 3.1.1 on 2020-11-05 13:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='block1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tematika', models.CharField(max_length=200, verbose_name='Тематика работы')),
                ('fio', models.CharField(max_length=200, verbose_name='Ф.И.О. научного руководителя')),
                ('us', models.CharField(choices=[('без ученой степени', 'без ученой степени'), ('кандидат', 'кандидат'), ('доктор', 'доктор')], max_length=20, verbose_name='Ученая степень')),
                ('uz', models.CharField(choices=[('без ученого звания', 'без ученого звания'), ('доцент', 'доцент'), ('профессор', 'профессор')], max_length=20, verbose_name='Ученое звание')),
                ('str_podr', models.CharField(max_length=200, verbose_name='Структурное подразделение, в котором выполняется проект')),
            ],
        ),
        migrations.CreateModel(
            name='block2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_v_r', models.CharField(max_length=10, verbose_name='Начало выполнения работы')),
                ('o_v_r', models.CharField(max_length=10, verbose_name='Окончание выполнения работы')),
                ('annot', models.TextField(max_length=500, verbose_name='Аннотация')),
            ],
        ),
        migrations.CreateModel(
            name='block3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_s_ot', models.TextField(max_length=1000, verbose_name='Цели, содержание и основные требования к проведению работы')),
                ('sootv1', models.CharField(choices=[('Безопасность и противодействие терроризму', 'Безопасность и противодействие терроризму'), ('Индустрия наносистем', 'Индустрия наносистем'), ('Информационно-телекоммуникационные системы', 'Информационно-телекоммуникационные системы'), ('Науки о жизни', 'Науки о жизни'), ('Перспективные виды вооружения, военной и специальной техники', 'Перспективные виды вооружения, военной и специальной техники'), ('Рациональное природопользование', 'Рациональное природопользование'), ('Транспортные и космические системы', 'Транспортные и космические системы'), ('Энергоэффективность, энергосбережение, ядерная энергетика', 'Энергоэффективность, энергосбережение, ядерная энергетика')], max_length=200, verbose_name='Соответствие проводимых исследований приоритетным направлениям развития науки, технологий и техники в Российской Федерации')),
                ('sootv2', models.CharField(choices=[('Энергоэффективность и энергосбережение', 'Энергоэффективность и энергосбережение'), ('Ядерные технологии', 'Ядерные технологии'), ('Космические технологии', 'Космические технологии'), ('Медицинские технологии', 'Медицинские технологии'), ('Стратегические компьютерные технологии и программное обеспечение', 'Стратегические компьютерные технологии и программное обеспечение')], max_length=200, verbose_name='Соответствие проводимых исследований приоритетным направлениям модернизации и технологического развития экономики России')),
                ('sootv3', models.CharField(choices=[('Базовые и критические военные и промышленные технологии для создания перспективных видов вооружения, военной и специальной техники', 'Базовые и критические военные и промышленные технологии для создания перспективных видов вооружения, военной и специальной техники'), ('Базовые технологии силовой электротехники', 'Базовые технологии силовой электротехники'), ('Биокаталитические, биосинтетические и биосенсорные технологии', 'Биокаталитические, биосинтетические и биосенсорные технологии'), ('Биомедицинские и ветеринарные технологии', 'Биомедицинские и ветеринарные технологии'), ('Геномные, протеомные и постгеномные технологии', 'Геномные, протеомные и постгеномные технологии'), ('Клеточные технологии', 'Клеточные технологии'), ('Компьютерное моделирование наноматериалов, наноустройств и нанотехнологий', 'Компьютерное моделирование наноматериалов, наноустройств и нанотехнологий'), ('Нано-, био-, информационные, когнитивные технологии', 'Нано-, био-, информационные, когнитивные технологии'), ('Технологии атомной энергетики, ядерного топливного цикла, безопасного обращения с радиоактивными отходами и отработавшим ядерным топливом', 'Технологии атомной энергетики, ядерного топливного цикла, безопасного обращения с радиоактивными отходами и отработавшим ядерным топливом'), ('Технологии биоинженерии', 'Технологии биоинженерии'), ('Технологии диагностики наноматериалов и наноустройств', 'Технологии диагностики наноматериалов и наноустройств'), ('Технологии доступа к широкополосным мультимедийным услугам', 'Технологии доступа к широкополосным мультимедийным услугам'), ('Технологии информационных, управляющих, навигационных систем', 'Технологии информационных, управляющих, навигационных систем'), ('Технологии наноустройств и микросистемной техники', 'Технологии наноустройств и микросистемной техники'), ('Технологии новых и возобновляемых источников энергии, включая водородную энергетику', 'Технологии новых и возобновляемых источников энергии, включая водородную энергетику'), ('Технологии получения и обработки конструкционных наноматериалов', 'Технологии получения и обработки конструкционных наноматериалов'), ('Технологии получения и обработки функциональных наноматериалов', 'Технологии получения и обработки функциональных наноматериалов'), ('Технологии и программное обеспечение распределенных и высокопроизводительных вычислительных систем', 'Технологии и программное обеспечение распределенных и высокопроизводительных вычислительных систем'), ('Технологии мониторинга и прогнозирования состояния окружающей среды, предотвращения и ликвидации ее загрязнения', 'Технологии мониторинга и прогнозирования состояния окружающей среды, предотвращения и ликвидации ее загрязнения'), ('Технологии поиска, разведки, разработки месторождений полезных ископаемых и их добычи', 'Технологии поиска, разведки, разработки месторождений полезных ископаемых и их добычи'), ('Технологии предупреждения и ликвидации чрезвычайных ситуаций природного и техногенного характера', 'Технологии предупреждения и ликвидации чрезвычайных ситуаций природного и техногенного характера'), ('Технологии снижения потерь от социально значимых заболеваний', 'Технологии снижения потерь от социально значимых заболеваний'), ('Технологии создания высокоскоростных транспортных средств и интеллектуальных систем управления новыми видами транспорта', 'Технологии создания высокоскоростных транспортных средств и интеллектуальных систем управления новыми видами транспорта'), ('Технологии создания ракетно-космической и транспортной техники нового поколения', 'Технологии создания ракетно-космической и транспортной техники нового поколения'), ('Технологии создания электронной компонентной базы и энергоэффективных световых устройств', 'Технологии создания электронной компонентной базы и энергоэффективных световых устройств'), ('Технологии создания энергосберегающих систем транспортировки, распределения и использования энергии', 'Технологии создания энергосберегающих систем транспортировки, распределения и использования энергии'), ('Технологии энергоэффективного производства и преобразования энергии на органическом топливе', 'Технологии энергоэффективного производства и преобразования энергии на органическом топливе')], max_length=200, verbose_name='Соответствие проводимых исследований критическим технологиям')),
                ('anp_zr', models.TextField(max_length=1000, verbose_name='Актуальная, научная и практическая значимость работы')),
                ('s_z_s_s', models.TextField(max_length=1000, verbose_name='Соответствие заявки современному состоянию и перспективам развития научно-технического комплекса страны')),
            ],
        ),
        migrations.CreateModel(
            name='block4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zaschity', models.CharField(choices=[('нет', 'нет'), ('да', 'да')], max_length=200, verbose_name='Защиты диссертаций на соискание ученой степени кандидата и доктора наук')),
                ('nalichiye', models.CharField(choices=[('нет', 'нет'), ('да', 'да')], max_length=200, verbose_name='Наличие охранных документов на объекты интеллектуальной собственности')),
            ],
        ),
        migrations.CreateModel(
            name='dissertation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(choices=[('диссертация кандидата наук', 'диссертация кандидата наук'), ('диссертация доктора наук', 'диссертация доктора наук')], max_length=100, verbose_name='Тип диссертации')),
                ('nazvaniye', models.CharField(max_length=200, verbose_name='Название диссертации')),
                ('authors', models.CharField(max_length=200, verbose_name='Авторы')),
                ('n_s', models.CharField(max_length=8, verbose_name='Научная специальность')),
                ('data', models.CharField(max_length=10, verbose_name='Дата защиты диссертации')),
            ],
        ),
        migrations.CreateModel(
            name='obl_kod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(max_length=8, verbose_name='Код')),
                ('nazvaniye', models.CharField(max_length=200, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='ohr_doc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(choices=[('свидетельство о регистрации программы для ЭВМ', 'свидетельство о регистрации программы для ЭВМ'), ('свидетельство о регистрации базы данных', 'свидетельство о регистрации базы данных'), ('свидетельство о регистрации объекта промышленной собственности', 'свидетельство о регистрации объекта промышленной собственности')], max_length=200, verbose_name='Тип объекта интеллектуальной собственности')),
                ('naimenovaniye', models.CharField(max_length=200, verbose_name='Наименование объекта интеллектуальной собственности')),
                ('authors', models.CharField(max_length=200, verbose_name='Авторы')),
                ('nomer_ohr_doc', models.CharField(max_length=10, verbose_name='Номер охранного документа')),
                ('data', models.CharField(max_length=10, verbose_name='Дата выдачи охранного документа')),
            ],
        ),
        migrations.CreateModel(
            name='pokazateli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('koliz', models.CharField(max_length=200, verbose_name='Планируемый показатель')),
                ('kolvo', models.CharField(max_length=5, verbose_name='Количество')),
            ],
        ),
        migrations.CreateModel(
            name='publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naimenovaniye', models.CharField(max_length=200, verbose_name='Наименование')),
                ('authors', models.CharField(max_length=200, verbose_name='Авторы')),
                ('tip', models.CharField(choices=[('научная статья', 'научная статья'), ('монография', 'монография')], max_length=100, verbose_name='Тип публикации')),
                ('journal', models.CharField(max_length=200, verbose_name='Журнал')),
                ('number_of_journal', models.CharField(max_length=20, verbose_name='Номер журнала')),
                ('data', models.CharField(max_length=10, verbose_name='Дата публикации')),
            ],
        ),
        migrations.CreateModel(
            name='qual_opit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naimenovaniye', models.CharField(max_length=300, verbose_name='Наименование выполненной НИР')),
                ('ist_fin', models.CharField(choices=[('ведомственная программа', 'ведомственная программа'), ('госзадание', 'госзадание')], max_length=100, verbose_name='Источник финансирования')),
                ('results', models.TextField(max_length=1000, verbose_name='Научные и практические результаты, их внедрение')),
            ],
        ),
        migrations.CreateModel(
            name='spisok_ispolnitelei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=200, verbose_name='Ф.И.О.')),
                ('mg', models.CharField(max_length=10, verbose_name='Месяц, год рождения')),
                ('dolzh', models.CharField(choices=[('исполнитель', 'исполнитель'), ('руководитель проекта', 'руководитель проекта')], max_length=25, verbose_name='Должность')),
                ('us', models.CharField(choices=[('без ученой степени', 'без ученой степени'), ('кандидат', 'кандидат'), ('доктор', 'доктор')], max_length=20, verbose_name='Ученая степень')),
                ('uz', models.CharField(choices=[('без ученого звания', 'без ученого звания'), ('доцент', 'доцент'), ('профессор', 'профессор')], max_length=20, verbose_name='Ученое звание')),
                ('category', models.CharField(choices=[('1 квалификационный уровень (младший научный сотрудник, научный сотрудник и др.)', '1 квалификационный уровень (младший научный сотрудник, научный сотрудник и др.)'), ('2 квалификационный уровень (старший научный сотрудник и др.)', '2 квалификационный уровень (старший научный сотрудник и др.)'), ('2 квалификационный уровень (Инженер-исследователь; инженер-проектировщик II категории; ландшафтный архитектор II категории; переводчик технической литературы)', '2 квалификационный уровень (Инженер-исследователь; инженер-проектировщик II категории; ландшафтный архитектор II категории; переводчик технической литературы)'), ('3 квалификационный уровень (Инженер-проектировщик I категории; ландшафтный архитектор I категории)', '3 квалификационный уровень (Инженер-проектировщик I категории; ландшафтный архитектор I категории)'), ('4 квалификационный уровень (Лаборант-исследователь; стажер-исследователь)', '4 квалификационный уровень (Лаборант-исследователь; стажер-исследователь)'), ('5 квалификационный уровень (начальник (заведующий) обособленного подразделения и др.)', '5 квалификационный уровень (начальник (заведующий) обособленного подразделения и др.)')], max_length=200, verbose_name='Категория')),
                ('vs', models.CharField(max_length=4, verbose_name='Величина ставки')),
            ],
        ),
    ]
